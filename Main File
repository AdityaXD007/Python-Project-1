import read
import write
import operation

def display_furniture_text():
    text = '''
  ____  _____      _    ______                _ _                  
 |  _ \|  __ \    | |  |  ____|              (_) |                 
 | |_) | |__) |   | |  | |__ _   _ _ __ _ __  _| |_ _   _ _ __ ___ 
 |  _ <|  _  /_   | |  |  __| | | | '__| '_ \| | __| | | | '__/ _ \.
 | |_) | | \ \ |__| |  | |  | |_| | |  | | | | | |_| |_| | | |  __/
 |____/|_|  \_\____/   |_|   \__,_|_|  |_| |_|_|\__|\__,_|_|  \___|
    '''
    print(text)

    menu = '''
    |--------------------------------------------------------|
    |   Select an option of your choice                      |
    |--------------------------------------------------------|
    |  -Enter 1: To Display furniture details                |
    |  -Enter 2: To update furniture stock                   |
    |  -Enter 3: To sell furniture                           |
    |  -Enter 4: Exit the program                            |
    |--------------------------------------------------------|
    '''
    print(menu)

def display_inventory(inventory):
    inventory_header = '''
   _____                          _     _____                      _                   
  / ____|                        | |   |_   _|                    | |                  
 | |    _   _ _ __ _ __ ___ _ __ | |_    | |  _ ____   _____ _ __ | |_ ___  _ __ _   _ 
 | |   | | | | '__| '__/ _ \ '_ \| __|   | | | '_ \ \ / / _ \ '_ \| __/ _ \| '__| | | |
 | |___| |_| | |  | | |  __/ | | | |_   _| |_| | | \ V /  __/ | | | || (_) | |  | |_| |
  \_____\__,_|_|  |_|  \___|_| |_|\__| |_____|_| |_|\_/ \___|_| |_|\__\___/|_|   \__, |
                                                                                  __/ |
                                                                                 |___/                                                                                                                                 
    '''

    print(inventory_header)
    # Print the column headers for the inventory table
    print("|-------|--------------------------------|----------------------|------------|-------------|")
    print(f"| {'ID':<5} | {'Manufacturer':<30} | {'Product':<20} | {'Quantity':<10} | {'Price':<10}  |")
    print("|-------|--------------------------------|----------------------|------------|-------------|")

    for item in inventory:
        # Unpack the list elements into variables
        item_id, manufacturer, product, quantity, price = item
        print(f"| {item_id:<5} | {manufacturer:<30} | {product:<20} | {quantity:<10} | ${price:<10.2f} |")
    print("|------------------------------------------------------------------------------------------|")

def main():
    file_path = 'inventory.txt'

    try:
        # Read inventory data from file
        inventory = read.read_inventory_of_furniture(file_path)
        if not inventory:
            print("No inventory data is found / file is empty.")
            return
        print(f"Loaded {len(inventory)} items from the furniture inventory.")
    except Exception as e:
        print(f"Error while reading inventory file: {e}")
        return

    # Display the initial text and menu
    display_furniture_text()

    while True:
        choice = input("\nEnter your choice from option (1-4): ").strip()

        # Option 1: Display inventory
        if choice == '1':
            print("Displaying inventory of the available furniture:")
            display_inventory(inventory)

        # Option 2: Update furniture stock
        elif choice == '2':
            employee_name = input("Enter employee name: ")

            # Loop until valid phone number is provided
            while True:
                employee_phone_number = input("Enter employee phone number: ").strip()
                if len(employee_phone_number) == 10 and employee_phone_number.isdigit():
                    break
                else:
                    print("Invalid phone number. Please enter a valid 10-digit number.")

            purchased_items = []
            while True:
                try:
                    item_id = int(input("Enter ID of the product to purchase: "))
                    quantity = int(input("Enter quantity of the items: "))
                    # Purchase items and add to the inventory
                    item = operation.purchase_from_supplier(inventory, item_id, quantity)
                    if item:
                        purchased_items.append((item, quantity))
                    cont = input("Do you want to purchase/add another item to the inventory? (yes/no): ").strip()
                    if cont.lower() != 'yes':
                        break
                except ValueError:
                    print("Invalid input. Please enter valid numbers for ID and quantity.")
                except Exception as e:
                    print(f"Error updating inventory: {e}")

            # Generate purchase receipt
            operation.generate_combined_purchase_receipt(purchased_items, employee_name, employee_phone_number)
            print("Furniture purchased and added to the inventory successfully.")

            # Write updated inventory back to file
            write.write_furniture_data(file_path, inventory)

        # Option 3: Sell furniture
        elif choice == '3':
            customer_name = input("Enter customer name: ")
            customer_address = input("Enter customer address: ")

            # Loop until valid phone number is provided
            while True:
                customer_phone_number = input("Enter customer phone number: ").strip()
                if len(customer_phone_number) == 10 and customer_phone_number.isdigit():
                    break
                else:
                    print("Invalid phone number. Please enter a valid 10-digit number.")

            sold_items = []
            while True:
                try:
                    item_id = int(input("Enter ID of the product to sell: "))
                    quantity = int(input("Enter quantity of the product: "))
                    # Sell items and update inventory
                    item = operation.sell_to_customer(inventory, item_id, quantity)
                    if item:
                        sold_items.append((item, quantity))
                    cont = input("Do you want to sell another item? (yes/no): ").strip()
                    if cont.lower() != 'yes':
                        break
                except ValueError:
                    print("Invalid input. Please enter valid numbers for ID and quantity.")
                except Exception as e:
                    print(f"Error updating inventory: {e}")

            # Generate sales receipt
            operation.generate_combined_sales_receipt(sold_items, customer_name, customer_phone_number, customer_address)
            print("Furniture sold successfully.")

            # Write updated inventory back to file
            write.write_furniture_data(file_path, inventory)

        # Option 4: Exit the program
        elif choice == '4':
            thank_you_text = """
  _______ _                 _     __     __           ______          __      ___     _ _   _              
 |__   __| |               | |    \ \   / /          |  ____|         \ \    / (_)   (_) | (_)             
    | |  | |__   __ _ _ __ | | __  \ \_/ /__  _   _  | |__ ___  _ __   \ \  / / _ ___ _| |_ _ _ __   __ _  
    | |  | '_ \ / _` | '_ \| |/ /   \   / _ \| | | | |  __/ _ \| '__|   \ \/ / | / __| | __| | '_ \ / _` | 
    | |  | | | | (_| | | | |   <     | | (_) | |_| | | | | (_) | |       \  /  | \__ \ | |_| | | | | (_| | 
    |_|  |_| |_|\__,_|_| |_|_|\_\    |_|\___/ \__,_| |_|  \___/|_|        \/   |_|___/_|\__|_|_| |_|\__, | 
                                                                                                     __/ | 
                                                                                                    |___/                                
                """
            print(thank_you_text)
            break

        else:
            print("Your choice is invalid, please enter a valid choice from option 1-4.")

if __name__ == '__main__':
    main()
